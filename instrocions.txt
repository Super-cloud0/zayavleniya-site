Вот полная и подробная инструкция по запуску вашего сайта с базой данных MongoDB. Следуйте этим шагам каждый раз, когда вы хотите запустить сайт.

Шаг 1: Запустите сервер базы данных MongoDB
Это самый первый и самый важный шаг. Вы должны запустить MongoDB до того, как запустите свой сервер Node.js.

Откройте новое окно Терминала (или Командной строки).

Перейдите в папку, где установлена MongoDB. Путь к ней, скорее всего, выглядит так:

Bash

cd "C:\Program Files\MongoDB\Server\6.0\bin"
(Если у вас другая версия MongoDB, замените 6.0 на номер вашей версии).

Запустите сервер MongoDB с помощью команды:

Bash

mongod
Если все правильно, вы увидите в консоли сообщение waiting for connections on port 27017.

Очень важно: не закрывайте это окно Терминала. Оно должно оставаться открытым и работать, пока вы работаете с сайтом.

Шаг 2: Запустите ваш сервер Node.js
Теперь, когда база данных работает, вы можете запустить свой сервер, который будет с ней общаться.

Откройте еще одно, второе окно Терминала.

Перейдите в папку вашего бэкенда (backend). Путь к ней должен быть похож на этот:

Bash

cd C:\Users\Alisher\Desktop\zayavleniya-site\backend
Запустите сервер Node.js командой:

Bash

node server.js
Если все получилось, вы увидите два сообщения: Сервер запущен на порту 3000 и Успешное подключение к MongoDB!.

Теперь ваш бэкенд полностью готов к работе.

Шаг 3: Откройте сайт в браузере
Последний шаг — это открыть ваши HTML-файлы в браузере и начать работу с сайтом.

Перейдите в папку, где находятся ваши файлы (registration.html, login.html).

Откройте файл registration.html в вашем браузере.

Попробуйте зарегистрироваться с новым ИИН и паролем. Если все работает, данные будут сохранены в базе данных MongoDB, а не в браузере.

После успешной регистрации перейдите на страницу login.html и войдите в систему с данными, которые вы только что создали.

Если вам нужно будет изменить роль пользователя, просто воспользуйтесь скриптом assignAdmin.js и запустите его в третьем окне Терминала.






Вы абсолютно правы! Я забыл, что мы работаем над третьим элементом — скриптом assignAdmin.js. Этот скрипт нужен только один раз, чтобы создать первого администратора.

Вот как правильно его запустить.

Инструкция по запуску assignAdmin.js
Проверьте скрипт. Убедитесь, что в файле assignAdmin.js в строке const iinToUpdate = '111'; вы указали ИИН того пользователя, которого хотите сделать администратором. Например, если вы зарегистрировали пользователя с ИИН 123456, измените строку на const iinToUpdate = '123456';.

Запустите сервер и базу данных. Убедитесь, что в двух отдельных окнах Терминала у вас запущены mongod и node server.js.

Откройте третье окно Терминала.

Перейдите в папку вашего бэкенда (backend) с помощью команды cd.

Запустите скрипт командой:

Bash

node assignAdmin.js
После выполнения вы увидите сообщение в консоли, которое подтвердит, что роль пользователя успешно изменена на admin. Теперь вы можете войти в систему под этим ИИН и получить доступ к панели администратора.